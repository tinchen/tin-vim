*tips.txt*      我的 VIM 生存必備技能

==============================================================================
CONTENTS                                                  *myvim-contents*

    01. 第一級：存活 ....................... |myvim-level-1|
    03. 第二級：感覺良好 ................... |myvim-level-2|
    04. 第三級：更好更強更快 ............... |myvim-level-3|
    05. 第四級：超能力 ..................... |myvim-level-4|
    06. 視窗操作（<C-w>） .................. |myvim-window|
    06. 開啟、編輯與儲存檔 ................. |myvim-file-op|
    07. 游標標示選取 ....................... |myvim-selection|
    08. 游標移動 ........................... |myvim-moving|
    09. 搜尋與取代 ......................... |myvim-find-replace|
    10. 主要自訂快捷鍵 ..................... |myvim-keymap|
    11. 常用外掛功能說明 ................... |myvim-plugins|
        6.1 NERDTree ....................... |myvim-nerd-tree|

==============================================================================
01. 第一級：存活                                               *myvim-level-1*

    <i>   insert ：進入 Insert 模式，可以輸入文本了
    <esc> 返回 Normal 模式，在 Normal 模式下，所有的鍵就是功能鍵
    <x>   刪當前游標 所在的一個字符
    :wq   存盤 + 退出 - :w存盤 :q退出 :w 後可以跟文件名
    <dd>  刪除當前行，並把刪除的行存到剪貼板裡
    <p>   粘貼剪貼板
    :help <command> 顯示相關命令的幫助。輸入 :help 也可，退出幫助需要輸入:q

==============================================================================
02. 第二級:感覺良好                                            *myvim-level-2*

------------------------------------------------------------------------------
    2-1 各種插入模式

        <a>  在游標 後插入
        <o>  在當前行後插入一個新行
        <O>  在當前行前插入一個新行
        <cw> 替換從游標 所在位置後到一個單詞結尾的字符

------------------------------------------------------------------------------
    2-2 簡單的移動游標

        <0>  數字零，到行頭
        <^>  到本行第一個不是 blank 字符的位置，所謂 blank 字符就是空格，tab，換行，回車等
        <$>  到本行行尾
        /pattern 搜索 pattern 的字符串（如搜索出多個匹配，可按 n 鍵到下一個）

------------------------------------------------------------------------------
    2-3 拷貝/粘貼

        <p> <P> 粘貼，p 是表示在當前位置之後，P 表示在當前位置之前
        <yy>    拷貝當前行

------------------------------------------------------------------------------
    2-4 Undo/Redo

        <u>   Undo
        <C-r> Redo

------------------------------------------------------------------------------
    2-5 打開/保存/退出/改變文件 (Buffer)

        :e          <path/to/file> 打開一個文件
        :w :w!      存盤，強制存檔
        :s          <path/to/file> 另存為 <path/to/file>
        :x <ZZ> :wq 保存並退出（:x 表示僅在需要時保存，ZZ 不需輸入冒號並回車）
        :q!         退出不保存
        :qa!        強行退出所有的正在編輯的文件，就算文件有更改。
        :bn :bp     可同時打開很多文件，切換下一個或上一個文件
                    或使用 :n 到下一個文件

==============================================================================
03. 第三級：更好更強更快                                       *myvim-level-3*

------------------------------------------------------------------------------
    3-1 更好

        <.>         (小數點)可以重複上一次的命令
        n<command>  重複某個命令 n 次，如：5dd 即刪除 5 行

------------------------------------------------------------------------------
    3-1 更強

        <nG> :n   到第 n 行
        gg 1G :1  到第一行
        <G>       到最後一行
        <w>       到下一個單詞的開頭
        <e>       到下一個單詞的結尾
        <W>       到下一個 blank 字符的開頭
        <E>       到下一個 blank 字符的結尾，參考：http://goo.gl/hehhP2
        <%>       把游標先移到括號上：匹配括號移動，包括 ( , { , [
        <#>       匹配游標 當前所在的單詞，移動到上一個
        <*>       匹配游標 當前所在的單詞，移動到下一個

------------------------------------------------------------------------------
    3-3 更快

        游標 的移動，很多命令都可和移動游標 的命令連動：

            <start position><command><end position>

        <0y$>    0 先到行頭，y 從這裡開始拷貝，$ 拷貝到本行最後一個字符
        <ye>     從當前位置拷貝到本單詞的最後一個字符
        <y2/foo> 拷貝 2 個 “foo” 之間的字符串
        <gU>     變大寫
        <gu>     變小寫

==============================================================================
04. 第四級：超能力                                             *myvim-level-4*

------------------------------------------------------------------------------
    4-1 在當前行上移動游標 : 0 ^ $ f F t T ,  參考：http://goo.gl/D6cmfe

        <0>   到行頭
        <^>   到本行的第一個非 blank 字符
        <$>   到行尾
        <g_>  到本行最後一個不是 blank 字符的位置。
        <fa>  到下一個為 a 的字符處，你也可以 <fs> 到下一個為 s 的字符。
        <t,>  到逗號前的第一個字符。逗號可以變成其它字符。
        <3fa> 在當前行查找第三個出現的 a。
        <FT>  和 <ft> 一樣，只不過是相反方向
        <d$>  刪除目前位置到行尾所有的內容
        <dt"> 刪除所有的內容，直到遇到雙引號 "

------------------------------------------------------------------------------
    4-2 區域選擇<action>a<object> 或 <action>i<object>

        action 可以是任何的命令：如 d (刪除), y (拷貝), v (選擇)
        object 可能是：w 一個單詞，W 一個以空格為分隔的單詞，s 一個句字，
                       p 一個段落。也可是一個特別的字符：" ' ) } ] 等

        假設有一個字符串 (map (+) ("foo"))  而游標 鍵在第一個 o 的位置
        參考：http://goo.gl/6XelBF

        <vi">  inside 會選擇 foo
        <va">  around 會選擇 "foo"
        <vi)>  inside 會選擇 "foo"
        <va)>  around 會選擇 ("foo")
        <v2i)> inside 會選擇 map (+) ("foo")
        <v2a)> around 會選擇 (map (+) ("foo"))

------------------------------------------------------------------------------
    4-3 區塊選擇 <C-q>

        典型範例：<C-q> <j> <I> <--> <esc>

        <C-q>    進入區塊選擇模式
        <j>      向下移動（數次）
        <I> <--> 插入 --，當然可插入其它字串
        <esc>    使每一行都生效

        <$>      移到行末
        <A> <,>  加入 ,
        <esc>    使每一行都生效

------------------------------------------------------------------------------
    4-4 字串與多行選擇 <v> <V> <C-q> 選擇後可進行下面的動作：

        <J>    把所有的行連接起來（變成一行）
        < 或 > 進行縮進排列，搭配 . 就可重複執行
        <=>    自動縮進排列

------------------------------------------------------------------------------
    4-5 自動提示 <C-n> <C-p> 參考：http://goo.gl/CRFBx7

        在 Insert 模式下，輸入一個詞的開頭，按 <C-p> 或 <C-n> 就出现了

==============================================================================
05. 開啟、編輯與儲存檔案                                       *myvim-file-op*

    $vim test.txt     開存啟一個檔案編輯
    $vim *.txt        存開啟多個檔案編輯
    :n                 存可在 vim 內切換 buffer 編輯
    :e test.txt        存開啟一個檔案編輯
    :w :w!             存儲存檔案（! 表示強制）
    :w test2.txt       存另存新檔
    :4,8w!             存將第 4~8 行的資料存檔
    :4,8w test2.txt    存將第 4~8 行的資料另存新檔
    :w >>test2.txt     存將此檔案的內容添加到另一個檔案中
    :4,8w >>test2.txt  將此檔案的部份內容添加到另一個檔案中
    :x :x!             存檔後離開（! 表示強制）
    :q :q!             不存檔後離開（! 表示強制）
    :e!                回復到上次存檔的內容

==============================================================================
06. 游標移動                                           *myvim-cursor-movement*

    <h> ←          左移
    <j> ↓          下移
    <k> ↑          上移
    <l> →  <space> 右移
    n<h, j, k, l>  向指定的方向移動 n 格或行
    <0>            移動到行首
    <$>            移動到行末
    n<$>           移動到下 n 行的行末
    <1G> :n <[[>   移動到第一行
    <G>  <]]>      移動到最末行
    <+> n<+>       向下移動 n 行
    <-> n<->       向上移動 n 行
    <C-f>          向下移動一頁（forward）
    <C-b>          向上移動一頁（backward）
    <fa>           向前移動到字元 a 上（find）
    <Fa>           向後移動到字元 a 上
    <ta>           向前移動到字元 a 前（to）
    <Ta>           向後移動到字元 a 後
    <w>            移動到下一個文字首
    <e>            移動到下一個文字末
    <W>            移動到下一個非空白的文字首
    <E>            移動到下一個非空白的文字末
    <(> <)>        在行間、statement 間移動
    <{> <}>        在段落間移動
    <%>            在 <> [] {} () 間移動

    <m[a-z]>       建立一個名稱為 a..z 的書籤
    <`[a-z]>       跳到一個名稱為 a..z 的書籤
    <d'[a-z]>      刪除目前行到名稱為 a..z 的書籤間的資料
    <y'[a-z]>      複製目前行到名稱為 a..z 的書籤間的資料
    <c'[a-z]>      替換目前行到名稱為 a..z 的書籤間的資料
    <[`>           跳到前一個書籤
    <]`>           跳到後一個書籤
    :marks         顯示所有的書籤
    :delmarks a    刪除名稱為 a 的書籤
    :delmarks!     刪除所有的的書籤

==============================================================================
05. 視窗操作 <C-w>                                              *myvim-window*

    <C-w> <n> ：即 :new。開一空的新視窗
    <C-w> <s> ：即 :split  會開一水平新視窗，且原檔分屬兩個視窗
    <C-w> <v> ：即 :vsplit 會開一垂直新視窗，且原檔分屬兩個視窗
    <C-w> <f> ：開一新視窗，並編輯游標所在處之 word 為檔名的檔案
    <C-w> <o> ：即 :only! 使游標所在之視窗，成為目前唯一顯示的視窗
    <C-w> <h> <j> <k> <l> 或 ← ↑ ↓ →  使游標移動切換視窗
    <C-w> <C-w> 使游標移動切換視窗
    <C-w> <q>  即 :q 結束分割出來的視窗

    <C-Pu> <C-Pd> 在 GVim 中切換 tab

